{
	"name": "discord-api-types",
	"version": "0.14.0",
	"description": "Discord API typings that are kept up to date for use in bot library creation.",
	"main": "./shortcuts/v8.js",
	"module": "./shortcuts/v8.mjs",
	"types": "./shortcuts/v8.d.ts",
	"exports": {
		"./v6": {
			"require": "./shortcuts/v6.js",
			"import": "./shortcuts/v6.mjs"
		},
		"./v8": {
			"require": "./shortcuts/v8.js",
			"import": "./shortcuts/v8.mjs"
		},
		"./gateway": {
			"require": "./gateway/index.js",
			"import": "./gateway/index.mjs"
		},
		"./gateway/v*": {
			"require": "./gateway/v*.js",
			"import": "./gateway/v*.mjs"
		},
		"./payloads": {
			"require": "./payloads/index.js",
			"import": "./payloads/index.mjs"
		},
		"./payloads/v*": {
			"require": "./payloads/v*/index.js",
			"import": "./payloads/v*/index.mjs"
		},
		"./rest": {
			"require": "./rest/index.js",
			"import": "./rest/index.mjs"
		},
		"./rest/v*": {
			"require": "./rest/v*/index.js",
			"import": "./rest/v*/index.mjs"
		},
		"./rpc": {
			"require": "./rpc/index.js",
			"import": "./rpc/index.mjs"
		},
		"./voice": {
			"require": "./voice/index.js",
			"import": "./voice/index.mjs"
		},
		"./voice/v*": {
			"require": "./voice/v*.js",
			"import": "./voice/v*.mjs"
		}
	},
	"scripts": {
		"build:ci": "tsc --noEmit --incremental false",
		"build:deno": "node ./scripts/deno.mjs",
		"build:node": "tsc && run-p esm:*",
		"clean:deno": "rimraf deno/",
		"clean:node": "rimraf {gateway,payloads,rest,rpc,voice,shortcuts}/**/*.{js,mjs,d.ts,map} globals.{js,mjs,d.ts,*map}",
		"clean": "run-p clean:*",
		"esm:globals": "gen-esm-wrapper ./globals.js ./globals.mjs",
		"esm:gateway": "gen-esm-wrapper ./gateway/index.js ./gateway/index.mjs",
		"esm:payloads": "gen-esm-wrapper ./payloads/index.js ./payloads/index.mjs",
		"esm:rest": "gen-esm-wrapper ./rest/index.js ./rest/index.mjs",
		"esm:rpc": "gen-esm-wrapper ./rpc/index.js ./rpc/index.mjs",
		"esm:v6": "gen-esm-wrapper ./shortcuts/v6.js ./shortcuts/v6.mjs",
		"esm:v8": "gen-esm-wrapper ./shortcuts/v8.js ./shortcuts/v8.mjs",
		"esm:voice": "gen-esm-wrapper ./voice/index.js ./voice/index.mjs",
		"esm:versions": "node ./scripts/versions.mjs",
		"lint": "eslint --fix --ext mjs,ts {gateway,payloads,rest,rpc,voice,shortcuts}/** globals.ts",
		"test:lint": "eslint --ext mjs,ts {gateway,payloads,rest,rpc,voice,shortcuts}/** globals.ts",
		"prepublishOnly": "run-s clean test:lint build:node",
		"postpublish": "run-s clean:node build:deno"
	},
	"keywords": [
		"discord",
		"discord api",
		"types",
		"discordjs"
	],
	"author": "Vlad Frangu <kingdgrizzle@gmail.com>",
	"license": "MIT",
	"files": [
		"{gateway,payloads,rest,rpc,voice,shortcuts}/**/*.{js,js.map,d.ts,d.ts.map,mjs}",
		"globals.{js,js.map,d.ts,d.ts.map,mjs}"
	],
	"engines": {
		"node": ">=12"
	},
	"devDependencies": {
		"@commitlint/cli": "^12.1.1",
		"@commitlint/config-angular": "^12.1.1",
		"@types/node": "^14.14.37",
		"@typescript-eslint/eslint-plugin": "^4.21.0",
		"@typescript-eslint/parser": "^4.21.0",
		"eslint": "^7.24.0",
		"eslint-config-marine": "^8.3.2",
		"eslint-config-prettier": "^8.1.0",
		"eslint-plugin-prettier": "^3.3.1",
		"gen-esm-wrapper": "^1.1.1",
		"husky": "^4.3.8",
		"lint-staged": "^10.5.4",
		"npm-run-all": "^4.1.5",
		"prettier": "^2.2.1",
		"pretty-quick": "^3.1.0",
		"rimraf": "^3.0.2",
		"typescript": "^4.2.4"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/discordjs/discord-api-types"
	},
	"eslintConfig": {
		"extends": "marine/prettier/node",
		"parserOptions": {
			"project": "./tsconfig.eslint.json",
			"extraFileExtensions": [
				".mjs"
			]
		},
		"rules": {
			"@typescript-eslint/naming-convention": 0
		},
		"overrides": [
			{
				"files": [
					"scripts/**/*.mjs"
				],
				"parserOptions": {
					"sourceType": "module"
				}
			}
		]
	},
	"husky": {
		"hooks": {
			"pre-commit": "pretty-quick --staged && lint-staged && npm run build:deno && git add deno",
			"commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
		}
	},
	"lint-staged": {
		"{gateway,rest,rpc,voice,shortcuts}/**/*.{mjs,js,ts}": "eslint --fix --ext mjs,js,ts",
		"globals.ts": "eslint --fix --ext mjs,js,ts"
	},
	"commitlint": {
		"extends": [
			"@commitlint/config-angular"
		],
		"rules": {
			"type-enum": [
				2,
				"always",
				[
					"chore",
					"build",
					"ci",
					"docs",
					"feat",
					"fix",
					"perf",
					"refactor",
					"revert",
					"style",
					"test",
					"types",
					"wip"
				]
			],
			"scope-case": [
				1,
				"always",
				"pascal-case"
			]
		}
	}
}
